version: '3.9'

services:
  app:
    build:
      context: .
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    volumes:
      - ./app:/app
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - SMS_API_USER=${SMS_API_USER}
      - SMS_API_PASSWORD=${SMS_API_PASSWORD}
      - SMS_API_SENDER=${SMS_API_SENDER}
    depends_on:
      - db
      - redis
  celery:
    build:
      context: .
    command: sh -c "celery -A app worker -l INFO"
    volumes:
      - ./app:/app
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - SMS_API_USER=${SMS_API_USER}
      - SMS_API_PASSWORD=${SMS_API_PASSWORD}
      - SMS_API_SENDER=${SMS_API_SENDER}
    depends_on:
      - app
      - redis
  celery-beat:
    build:
      context: .
    command: sh -c "celery -A app beat"
    volumes:
      - ./app:/app
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - SMS_API_USER=${SMS_API_USER}
      - SMS_API_PASSWORD=${SMS_API_PASSWORD}
      - SMS_API_SENDER=${SMS_API_SENDER}
    depends_on:
      - app
      - redis
      - celery
  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme
  redis:
    image: "redis:alpine"
volumes:
  dev-db-data: